@model MobLoot.Models.Loot.LootEdit

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
     
    <div class="form-horizontal">
        <h4 class="titles">Edit Loot</h4>
        <hr />
        @Html.HiddenFor(model => model.LootId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LootName, htmlAttributes: new { @class = "boxtext control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LootName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LootName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LootDesc, htmlAttributes: new { @class = "boxtext control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LootDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LootDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonsterId, "Monster: ", htmlAttributes: new { @class = "boxtext control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MonsterId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MonsterId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn button" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
